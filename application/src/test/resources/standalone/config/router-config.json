{
  "configVersion": "v2.4.0-EN000121",
  "server": {
    "apiProcessingTimeout": "7s",
    "traceParameters": [
      {
        "httpRequestHeader": "X-Correlation-ID",
        "httpResponseHeader": "X-Correlation-ID",
        "logKey": "correlationId",
        "generateIdIfMissing": true
      }
    ]
  },
  "routingDefaults": {
    "numItineraries": 12,
    "transferPenalty": 0,
    "turnReluctance": 1.0,
    "elevatorBoardTime": 90,
    "elevatorBoardCost": 90,
    "elevatorHopTime": 20,
    "elevatorHopCost": 20,
    "bicycle": {
      "speed": 5,
      "reluctance": 5.0,
      "boardCost": 600,
      "walk": {
        "reluctance": 10.0,
        "stairsReluctance": 150.0
      },
      "rental": {
        "pickupCost": 120,
        "dropOffTime": "30s",
        "dropOffCost": 30
      },
      "parking": {
        "time": "1m",
        "cost": 120
      },
      "triangle": {
        "safety": 0.4,
        "flatness": 0.3,
        "time": 0.3
      }
    },
    "car": {
      "reluctance": 10,
      "decelerationSpeed": 2.9,
      "accelerationSpeed": 2.9,
      "rental": {
        "pickupCost": 120,
        "dropOffTime": "30s",
        "dropOffCost": 30
      },
      "parking": {
        "time": "5m",
        "cost": 600
      }
    },
    "scooter": {
      "speed": 5,
      "reluctance": 5.0,
      "rental": {
        "pickupCost": 120,
        "dropOffTime": "30s",
        "dropOffCost": 30
      },
      "triangle": {
        "safety": 0.4,
        "flatness": 0.3,
        "time": 0.3
      }
    },
    "walk": {
      "speed": 1.3,
      "reluctance": 4.0,
      "stairsReluctance": 1.65,
      "boardCost": 600,
      "escalatorReluctance": 1.5
    },
    "waitReluctance": 1.0,
    "otherThanPreferredRoutesPenalty": 300,
    "transferSlack": "2m",
    // Default slack for any mode is 0 (zero)
    "boardSlackForMode": {
      "AIRPLANE": "35m"
    },
    "alightSlackForMode": {
      "AIRPLANE": "15m"
    },
    "transitReluctanceForMode": {
      "RAIL": 0.85
    },
    "accessEgress": {
      "maxDuration": "45m",
      "maxDurationForMode": {
        "BIKE_RENTAL": "20m"
      },
      "maxStopCount": 500,
      "penalty": {
        "FLEXIBLE": {
          "timePenalty": "2m + 1.1t",
          "costFactor": 1.7
        }
      }
    },
    "itineraryFilters": {
      "transitGeneralizedCostLimit": {
        "costLimitFunction": "15m + 1.5 x",
        "intervalRelaxFactor": 0.4
      },
      "nonTransitGeneralizedCostLimit": "400 + 1.5x",
      "removeTransitWithHigherCostThanBestOnStreetOnly": "60 + 1.3x",
      "bikeRentalDistanceRatio": 0.3,
      "accessibilityScore": true,
      "minBikeParkingDistance": 300,
      "debug": "limit-to-search-window"
    },
    "ignoreRealtimeUpdates": false,
    "geoidElevation": false,
    "maxJourneyDuration": "36h",
    "unpreferred": {
      "agencies": [
        "HSL:123"
      ],
      "routes": [
        "HSL:456"
      ]
    },
    "unpreferredCost": "10m + 2.0 x",
    "streetRoutingTimeout": "5s",
    "transferOptimization": {
      "optimizeTransferWaitTime": true,
      "minSafeWaitTimeFactor": 5.0,
      "backTravelWaitTimeFactor": 1.0,
      "extraStopBoardAlightCostsFactor": 8.0
    },
    // use stop and trip with unknown wheelchair accessibility during routing
    "wheelchairAccessibility": {
      "trip": {
        "onlyConsiderAccessible": false,
        "unknownCost": 600,
        "inaccessibleCost": 3600
      },
      "stop": {
        "onlyConsiderAccessible": false,
        "unknownCost": 600,
        "inaccessibleCost": 3600
      },
      "elevator": {
        "onlyConsiderAccessible": false,
        "unknownCost": 20,
        "inaccessibleCost": 3600
      },
      "inaccessibleStreetReluctance": 25,
      "maxSlope": 0.083,
      "slopeExceededReluctance": 1,
      "stairsReluctance": 100
    }
  },
  "flex": {
    "maxTransferDuration": "5m",
    "maxFlexTripDuration": "45m",
    "maxAccessWalkDuration": "15m",
    "maxEgressWalkDuration": "15m"
  },
  "transit": {
    "maxNumberOfTransfers": 12,
    "dynamicSearchWindow": {
      "minTransitTimeCoefficient": 0.5,
      "minWaitTimeCoefficient": 0.5,
      "minWindow": "1h",
      "maxWindow": "5h"
    },
    "stopBoardAlightDuringTransferCost": {
      "DISCOURAGED": 1500,
      "ALLOWED": 75,
      "RECOMMENDED": 30,
      "PREFERRED": 0
    },
    "transferCacheRequests": [
      {
        "modes": "WALK"
      },
      {
        "modes": "WALK",
        "wheelchairAccessibility": {
          "enabled": true
        }
      }
    ]
  },
  "vehicleRentalServiceDirectory": {
    "url": "https://entur.no/bikeRentalServiceDirectory",
    "sourcesName": "systems",
    "updaterUrlName": "url",
    "updaterNetworkName": "id",
    "headers": {
      "ET-Client-Name": "MY_ORG_CLIENT_NAME"
    }
  },
  "transmodelApi": {
    "hideFeedId": true
  },
  "vectorTiles": {
    "basePath": "/otp_ct/vectorTiles",
    "layers": [
      {
        "name": "stops",
        "type": "Stop",
        "mapper": "Digitransit",
        "maxZoom": 20,
        "minZoom": 14,
        "cacheMaxSeconds": 600
      },
      {
        "name": "areaStops",
        "type": "AreaStop",
        "mapper": "OTPRR",
        "maxZoom": 20,
        "minZoom": 14,
        "cacheMaxSeconds": 600
      },
      {
        "name": "stations",
        "type": "Station",
        "mapper": "Digitransit",
        "maxZoom": 20,
        "minZoom": 12,
        "cacheMaxSeconds": 600
      },
      {
        "name": "rentalPlaces",
        // all rental places: stations and free-floating vehicles
        "type": "VehicleRental",
        "mapper": "Digitransit",
        "maxZoom": 20,
        "minZoom": 14,
        "cacheMaxSeconds": 60,
        "expansionFactor": 0.25
      },
      {
        "name": "rentalVehicle",
        // just free-floating vehicles
        "type": "VehicleRentalVehicle",
        "mapper": "Digitransit",
        "maxZoom": 20,
        "minZoom": 14,
        "cacheMaxSeconds": 60
      },
      {
        "name": "rentalStation",
        // just rental stations
        "type": "VehicleRentalStation",
        "mapper": "Digitransit",
        "maxZoom": 20,
        "minZoom": 14,
        "cacheMaxSeconds": 600
      },
      {
        "name": "vehicleParking",
        "type": "VehicleParking",
        "mapper": "Digitransit",
        "maxZoom": 20,
        "minZoom": 14,
        "cacheMaxSeconds": 60,
        "expansionFactor": 0.25
      }
    ]
  },
  "timetableUpdates": {
    "purgeExpiredData": false,
    "maxSnapshotFrequency": "2s"
  },
  "updaters": [
    // GTFS-RT service alerts (frequent polling)
    {
      "type": "real-time-alerts",
      "frequency": "30s",
      "url": "http://developer.trimet.org/ws/V1/FeedSpecAlerts/appID/0123456789ABCDEF",
      "feedId": "TriMet",
      "headers": {
        "Some-Header": "A-Value"
      }
    },
    //<!--- Tampa Area GBFS bike share -->
    {
      "type": "vehicle-rental",
      "network": "socialbicycles_coast",
      "sourceType": "gbfs",
      "language": "en",
      "frequency": "1m",
      "allowKeepingRentedVehicleAtDestination": false,
      "geofencingZones": false,
      "url": "http://coast.socialbicycles.com/opendata/gbfs.json",
      "headers": {
        // example for authentication headers
        "Auth": "<any-token>",
        // example for any header
        "<key>": "<value>"
      }
    },
    {
      "type": "vehicle-parking",
      "sourceType": "hsl-park",
      "feedId": "hslpark",
      "timeZone": "Europe/Helsinki",
      "facilitiesFrequencySec": 3600,
      "facilitiesUrl": "https://p.hsl.fi/api/v1/facilities.json?limit=-1",
      "utilizationsFrequencySec": 600,
      "utilizationsUrl": "https://p.hsl.fi/api/v1/utilizations.json?limit=-1",
      "hubsUrl": "https://p.hsl.fi/api/v1/hubs.json?limit=-1"
    },
    {
      "type": "vehicle-parking",
      "sourceType": "park-api",
      "feedId": "parkapi",
      "timeZone": "Europe/Berlin",
      "frequency": "10m",
      "url": "https://foo.bar",
      "headers": {
        "Cache-Control": "max-age=604800"
      },
      "tags": [
        "source:parkapi"
      ]
    },
    {
      "type": "vehicle-parking",
      "feedId": "bikely",
      "sourceType": "bikely",
      "url": "https://api.safebikely.com/api/v1/s/locations",
      "headers": {
        "X-Bikely-Token": "${BIKELY_TOKEN}",
        "Authorization": "${BIKELY_AUTHORIZATION}"
      }
    },
    {
      "type": "stop-time-updater",
      "frequency": "1m",
      "backwardsDelayPropagationType": "REQUIRED_NO_DATA",
      "url": "http://developer.trimet.org/ws/V1/TripUpdate/appID/0123456789ABCDEF",
      "feedId": "TriMet",
      "headers": {
        "Authorization": "A-Token"
      }
    },
    // Streaming GTFS-RT TripUpdates through an MQTT broker
    {
      "type": "mqtt-gtfs-rt-updater",
      "url": "tcp://pred.rt.hsl.fi",
      "topic": "gtfsrt/v2/fi/hsl/tu",
      "feedId": "HSL",
      "fuzzyTripMatching": true
    },
    // Polling for GTFS-RT Vehicle Positions - output can be fetched via trip pattern GraphQL API
    {
      "type": "vehicle-positions",
      "url": "https://s3.amazonaws.com/kcm-alerts-realtime-prod/vehiclepositions.pb",
      "feedId": "1",
      "frequency": "1m",
      "headers": {
        "Header-Name": "Header-Value"
      },
      "fuzzyTripMatching": false,
      "features": [
        "position"
      ]
    },
    // Siri-ET over HTTP
    {
      "type": "siri-et-updater",
      "url": "https://example.com/some/path",
      "feedId": "feed_id",
      "timeout": "30s",
      "headers": {
        "Authorization": "Some-Token"
      }
    },
    // Siri-SX over HTTP
    {
      "type": "siri-sx-updater",
      "url": "https://example.com/some/path",
      "feedId": "feed_id",
      "timeout": "30s",
      "headers": {
        "Key": "Value"
      }
    },
    // SIRI SX updater for Azure Service Bus
    {
      "type": "siri-azure-sx-updater",
      "topic": "some_topic",
      "servicebus-url": "service_bus_url",
      "feedId": "feed_id",
      "customMidnight": 4,
      "history": {
        "url": "endpoint_url",
        "fromDateTime": "-P1D",
        "toDateTime": "P1D",
        "timeout": 300000
      }
    },
    // SIRI ET updater for Azure Service Bus
    {
      "type": "siri-azure-et-updater",
      "topic": "some_topic",
      "authenticationType":  "SharedAccessKey",
      "fullyQualifiedNamespace":  "fully_qualified_namespace",
      "servicebus-url": "service_bus_url",
      "feedId": "feed_id",
      "customMidnight": 4,
      "history": {
        "url": "endpoint_url",
        "fromDateTime": "-P1D",
        "timeout": 300000
      }
    },
    // SIRI ET Google Pubsub updater
    {
      "type": "siri-et-google-pubsub-updater",
      "feedId": "feed_id",
      "reconnectPeriod": "5s",
      "initialGetDataTimeout": "1m20s",
      "topicProjectName": "google_pubsub_topic_project_name",
      "subscriptionProjectName": "google_pubsub_subscription_project_name",
      "topicName": "estimated_timetables",
      "dataInitializationUrl": "https://example.com/some/path",
      "fuzzyTripMatching": true
    },
    {
      "type": "vehicle-parking",
      "feedId": "bikeep",
      "sourceType": "bikeep",
      "url": "https://services.bikeep.com/location/v1/public-areas/no-baia-mobility/locations"
    },
    // SIRI-FM vehicle parking updater
    {
      "type": "vehicle-parking",
      "feedId": "parking",
      "sourceType": "siri-fm",
      "url": "https://transmodel.api.opendatahub.com/siri-lite/fm/parking"
    }
  ],
  "rideHailingServices": [
    {
      "type": "uber-car-hailing",
      "clientId": "secret-id",
      "clientSecret": "very-secret",
      "wheelchairAccessibleProductId": "545de0c4-659f-49c6-be65-0d5e448dffd5",
      "bannedProductIds": [
        "1196d0dd-423b-4a81-a1d8-615367d3a365",
        "f58761e5-8dd5-4940-a472-872f1236c596"
      ]
    }
  ]
}

