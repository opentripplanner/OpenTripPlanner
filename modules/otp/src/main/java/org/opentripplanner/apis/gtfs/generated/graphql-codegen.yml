schema: ../../../../../../resources/org/opentripplanner/apis/gtfs/schema.graphqls

generates:
  GraphQLTypes.java:
    plugins:
      - add:
          content: // THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
      - java
    config:
      className: GraphQLTypes
      listType: List
  GraphQLDataFetchers.java:
    plugins:
      - add:
          content: //THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
      - java-resolvers
    config:
      className: GraphQLDataFetchers

config:
  package: org.opentripplanner.apis.gtfs.generated
  typesPrefix: GraphQL
  scalars:
    ID: graphql.relay.Relay.ResolvedGlobalId
    Long: Long
    Polyline: String
    GeoJson: org.locationtech.jts.geom.Geometry
    Grams: org.opentripplanner.framework.model.Grams
    Duration: java.time.Duration
    Cost: org.opentripplanner.framework.model.Cost
    CoordinateValue: Double
    Locale: java.util.Locale
    OffsetDateTime: java.time.OffsetDateTime
    Speed: Double
    Reluctance: Double
    Ratio: Double
    LocalDate: java.time.LocalDate
  mappers:
    AbsoluteDirection: org.opentripplanner.apis.gtfs.generated.GraphQLTypes.GraphQLAbsoluteDirection#GraphQLAbsoluteDirection
    Agency: org.opentripplanner.transit.model.organization.Agency#Agency
    RouteType: org.opentripplanner.apis.gtfs.model.RouteTypeModel#RouteTypeModel
    Alert: org.opentripplanner.routing.alertpatch.TransitAlert#TransitAlert
    AlertCauseType: org.opentripplanner.apis.gtfs.generated.GraphQLTypes.GraphQLAlertCauseType#GraphQLAlertCauseType
    AlertEffectType: org.opentripplanner.apis.gtfs.generated.GraphQLTypes.GraphQLAlertEffectType#GraphQLAlertEffectType
    AlertSeverityLevelType: org.opentripplanner.apis.gtfs.generated.GraphQLTypes.GraphQLAlertSeverityLevelType#GraphQLAlertSeverityLevelType
    BikePark: org.opentripplanner.routing.vehicle_parking.VehicleParking#VehicleParking
    BikeRentalStation: org.opentripplanner.service.vehiclerental.model.VehicleRentalPlace#VehicleRentalPlace
    BikeRentalStationUris: org.opentripplanner.service.vehiclerental.model.VehicleRentalStationUris#VehicleRentalStationUris
    VehicleRentalStation: org.opentripplanner.service.vehiclerental.model.VehicleRentalStation#VehicleRentalStation
    VehicleRentalNetwork: org.opentripplanner.service.vehiclerental.model.VehicleRentalSystem#VehicleRentalSystem
    RentalVehicleEntityCounts: org.opentripplanner.service.vehiclerental.model.RentalVehicleEntityCounts#RentalVehicleEntityCounts
    RentalVehicleTypeCount: org.opentripplanner.service.vehiclerental.model.RentalVehicleTypeCount#RentalVehicleTypeCount
    RentalVehicle: org.opentripplanner.service.vehiclerental.model.VehicleRentalVehicle#VehicleRentalVehicle
    VehicleRentalUris: org.opentripplanner.service.vehiclerental.model.VehicleRentalStationUris#VehicleRentalStationUris
    BikesAllowed: org.opentripplanner.apis.gtfs.generated.GraphQLTypes.GraphQLBikesAllowed#GraphQLBikesAllowed
    BookingInfo: org.opentripplanner.transit.model.timetable.booking.BookingInfo#BookingInfo
    BookingTime: org.opentripplanner.transit.model.timetable.booking.BookingTime#BookingTime
    CarPark: org.opentripplanner.routing.vehicle_parking.VehicleParking#VehicleParking
    ContactInfo: org.opentripplanner.transit.model.organization.ContactInfo
    Cluster: Object
    Coordinates: org.locationtech.jts.geom.Coordinate#Coordinate
    debugOutput: org.opentripplanner.api.resource.DebugOutput#DebugOutput
    DepartureRow: org.opentripplanner.routing.graphfinder.PatternAtStop#PatternAtStop
    elevationProfileComponent: org.opentripplanner.model.plan.ElevationProfile.Step
    Emissions: org.opentripplanner.model.plan.Emissions#Emissions
    Feed: String
    FeedPublisher: org.opentripplanner.apis.gtfs.model.FeedPublisher#FeedPublisher
    Geometry: org.locationtech.jts.geom.Geometry#Geometry
    InputField: org.opentripplanner.apis.gtfs.generated.GraphQLTypes.GraphQLInputField#GraphQLInputField
    Itinerary: org.opentripplanner.model.plan.Itinerary#Itinerary
    Leg: org.opentripplanner.model.plan.Leg#Leg
    LegTime: org.opentripplanner.model.plan.LegTime#LegTime
    Mode: String
    OccupancyStatus: org.opentripplanner.apis.gtfs.generated.GraphQLTypes.GraphQLOccupancyStatus#GraphQLOccupancyStatus
    TransitMode: org.opentripplanner.apis.gtfs.generated.GraphQLTypes.GraphQLTransitMode#GraphQLTransitMode
    PageInfo: Object
    Pattern: org.opentripplanner.transit.model.network.TripPattern#TripPattern
    PickupDropoffType: String
    Place: org.opentripplanner.model.plan.StopArrival#StopArrival
    placeAtDistance: org.opentripplanner.routing.graphfinder.PlaceAtDistance#PlaceAtDistance
    placeAtDistanceConnection: graphql.relay.Connection#Connection<PlaceAtDistance>
    placeAtDistanceEdge: graphql.relay.Edge#Edge<PlaceAtDistance>
    Plan: graphql.execution.DataFetcherResult<org.opentripplanner.routing.api.response.RoutingResponse>
    PlanConnection: graphql.execution.DataFetcherResult<org.opentripplanner.routing.api.response.RoutingResponse>
    PlanEdge: graphql.relay.DefaultEdge#DefaultEdge<Itinerary>
    PlanPageInfo: org.opentripplanner.apis.gtfs.model.PlanPageInfo#PlanPageInfo
    RealtimeState: org.opentripplanner.apis.gtfs.generated.GraphQLTypes.GraphQLRealtimeState#GraphQLRealtimeState
    RelativeDirection: org.opentripplanner.apis.gtfs.generated.GraphQLTypes.GraphQLRelativeDirection#GraphQLRelativeDirection
    Route: org.opentripplanner.transit.model.network.Route#Route
    RoutingError: org.opentripplanner.routing.api.response.RoutingError#RoutingError
    RoutingErrorCode: org.opentripplanner.apis.gtfs.generated.GraphQLTypes.GraphQLRoutingErrorCode#GraphQLRoutingErrorCode
    serviceTimeRange: Object
    step: org.opentripplanner.model.plan.WalkStep#WalkStep
    Stop: Object # Can be either Stop or Station
    stopAtDistance: org.opentripplanner.routing.graphfinder.NearbyStop#NearbyStop
    stopAtDistanceConnection: graphql.relay.Connection#Connection<NearbyStop>
    stopAtDistanceEdge: graphql.relay.Edge#Edge<NearbyStop>
    StopOnRoute: org.opentripplanner.apis.gtfs.model.StopOnRouteModel#StopOnRouteModel
    StopOnTrip: org.opentripplanner.apis.gtfs.model.StopOnTripModel#StopOnTripModel
    Stoptime: org.opentripplanner.model.TripTimeOnDate#TripTimeOnDate
    StoptimesInPattern: org.opentripplanner.model.StopTimesInPattern#StopTimesInPattern
    TicketType: org.opentripplanner.ext.fares.model.FareRuleSet#FareRuleSet
    TranslatedString: java.util.Map#Map.Entry<String, String>
    Trip: org.opentripplanner.transit.model.timetable.Trip#Trip
    TripOccupancy: org.opentripplanner.apis.gtfs.model.TripOccupancy#TripOccupancy
    Unknown: org.opentripplanner.apis.gtfs.model.UnknownModel#UnknownModel
    VehicleParking: org.opentripplanner.routing.vehicle_parking.VehicleParking#VehicleParking
    VehicleParkingSpaces: org.opentripplanner.routing.vehicle_parking.VehicleParkingSpaces#VehicleParkingSpaces
    VehicleParkingState: org.opentripplanner.routing.vehicle_parking.VehicleParkingState#VehicleParkingState
    VertexType: String
    SystemNotice: org.opentripplanner.model.SystemNotice#SystemNotice
    VehiclePosition: org.opentripplanner.service.realtimevehicles.model.RealtimeVehicle#RealtimeVehicle
    StopRelationship: org.opentripplanner.service.realtimevehicles.model.RealtimeVehicle.StopRelationship#StopRelationship
    WheelchairBoarding: org.opentripplanner.apis.gtfs.generated.GraphQLTypes.GraphQLWheelchairBoarding
    FormFactor: org.opentripplanner.apis.gtfs.generated.GraphQLTypes.GraphQLFormFactor
    PropulsionType: org.opentripplanner.apis.gtfs.generated.GraphQLTypes.GraphQLPropulsionType
    RentalVehicleType: org.opentripplanner.service.vehiclerental.model.RentalVehicleType#RentalVehicleType
    OpeningHours: org.opentripplanner.model.calendar.openinghours.OHCalendar#OHCalendar
    RideHailingEstimate: org.opentripplanner.ext.ridehailing.model.RideEstimate#RideEstimate
    RideHailingProvider: org.opentripplanner.apis.gtfs.model.RideHailingProvider#RideHailingProvider
    Currency: java.util.Currency#Currency
    Money: org.opentripplanner.transit.model.basic.Money#Money
    FareProductUse: org.opentripplanner.model.fare.FareProductUse#FareProductUse
    FareProduct: org.opentripplanner.model.fare.FareProduct#FareProduct
    FareMedium: org.opentripplanner.model.fare.FareMedium#FareMedium
    RiderCategory: org.opentripplanner.model.fare.RiderCategory#RiderCategory
    StopPosition: org.opentripplanner.apis.gtfs.model.StopPosition#StopPosition

